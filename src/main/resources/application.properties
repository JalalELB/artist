server.port=8080

# DataSource settings :
spring.datasource.url=jdbc:mysql://localhost:3306/chinook?useSSL=false
spring.datasource.username=root
spring.datasource.password=exercice2023
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Specify the DBMS
spring.jpa.database=MYSQL

# Show or not log for SQL query
spring.jpa.show-sql=false

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update

#Testing connexion after 8 hours
#spring.datasource.test-on-borrow=true
spring.datasource.validation-query="select 1"
spring.datasource.test-while-idle=false

# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.DefaultNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# Deactivate stopping in debog mode anticipated by Spring DevTools
spring.devtools.restart.enabled=false


# Statistic Artists Query :
statistic.artists.query=select YEAR(i.invoice_date) as annee, a.artist_Id as artist_id, a.name as artist_name, alb.title as title, t.name as track_name, il.quantity as quantity, i.invoice_date as invoice_date, count(*) as sells from artist as a left join album as alb on a.artist_Id = alb.artist_id left join track as t on alb.album_Id = t.album_id left join invoice_line as il on t.track_id = il.track_id right join invoice as i on il.invoice_id = i.invoice_id group by a.artist_Id, YEAR(i.invoice_date) having sells > 2 order by artist_id, annee

